#include <assert.h>
#include "GameOfLife.h"

//Grid SetGrid(size_t height, size_t width) 
//{
//	Grid grid{};
//	for (size_t i = 0; i < height; i++)
//	{
//		grid.push_back(std::vector<Cell>());
//		for (size_t i = 0; i < width; i++)
//			grid[i].push_back(DeadCell);
//	}
//}

int main()
{
	//1
	auto prep = Grid{
		{'.','.','.','.','.','.','.','.'},
		{'.','.','.','.','*','.','.','.'},
		{'.','.','.','*','*','.','.','.'},
		{'.','.','.','.','.','.','.','.'}
	};

	auto expected = Grid{
		{'.','.','.','.','.','.','.','.'},
		{'.','.','.','*','*','.','.','.'},
		{'.','.','.','*','*','.','.','.'},
		{'.','.','.','.','.','.','.','.'}
	};

	auto res = TheNextGeneration(prep);

	assert(res == expected);

	//2
	prep = Grid{
		{'.','.','.','.','.'},
		{'.','.','*','.','.'},
		{'.','.','*','.','.'},
		{'.','.','*','.','.'},
		{'.','.','.','.','.'},
	};

	expected = Grid{
		{'.','.','.','.','.'},
		{'.','.','.','.','.'},
		{'.','*','*','*','.'},
		{'.','.','.','.','.'},
		{'.','.','.','.','.'},
	};

	res = TheNextGeneration(prep);

	assert(res == expected);

	//3
	prep = Grid{
		{'.','.','.','.','.'},
		{'.','.','*','.','.'},
		{'.','.','.','*','.'},
		{'.','*','*','*','.'},
		{'.','.','.','.','.'},
		{'.','.','.','.','.'}
	};

	expected = Grid{
		{'.','.','.','.','.'},
		{'.','.','.','.','.'},
		{'.','*','.','*','.'},
		{'.','.','*','*','.'},
		{'.','.','*','.','.'},
		{'.','.','.','.','.'}
	};

	res = TheNextGeneration(prep);

	assert(res == expected);
}