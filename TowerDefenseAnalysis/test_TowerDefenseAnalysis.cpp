#include "TowerDefenseAnalysis.h"
#include <cassert>

void Test_Examples()
{
	Battlefield battlefield = {"0111111",
							   "  A  B1",
							   " 111111",
							   " 1     ",
							   " 1C1111",
							   " 111 D1",
							   "      1"};
	Turrets turrets = {{'A', 3, 2}, {'B', 1, 4}, {'C', 2, 2}, {'D', 1, 3}};
	IncomingWaves waves = {30, 14, 27, 21, 13, 0, 15, 17, 0, 18, 26};
	auto res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(10 == res);

	battlefield = {"011  1111",
				   " A1  1BC1",
				   " 11  1 11",
				   " 1D  1 1E",
				   " 111 1F11",
				   "  G1 1  1",
				   " 111 1 11",
				   " 1H  1 1I",
				   " 11111 11"};
	turrets = {{'A', 1, 4}, {'B', 2, 2}, {'C', 1, 3}, {'D', 1, 3}, {'E', 1, 2}, {'F', 3, 3}, {'G', 1, 2}, {'H', 2, 3}, {'I', 2, 3}};
	waves = {36, 33, 46, 35, 44, 27, 25, 48, 39, 0, 39, 36, 55, 22, 26};
	res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(3 == res);

	battlefield = {"01111111",
				   " A    B1",
				   "11111111",
				   "1 C D E ",
				   "1 111111",
				   "1 1F  G1",
				   "1H1 1111",
				   "111 1   "};
	turrets = {{'A', 2, 2}, {'B', 1, 3}, {'C', 3, 3}, {'D', 1, 2}, {'E', 1, 4}, {'F', 2, 3}, {'G', 1, 3}, {'H', 2, 2}};
	waves = {37, 29, 16, 13, 42, 39, 8, 14, 35, 26, 59, 0, 44, 19, 17, 35, 49, 31, 0, 43};
	res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(12 == res);

	battlefield = {"1111111111",
				   "1A      B1",
				   "111C111111",
				   "  1 1D    ",
				   "011E111111",
				   "        F1",
				   "G1111111 1",
				   "11  H  111",
				   "1 I111  J ",
				   "1111K11111"};
	turrets = {{'A', 1, 2}, {'B', 1, 4}, {'C', 1, 3}, {'D', 2, 2}, {'E', 3, 3}, {'F', 1, 3}, {'G', 2, 2}, {'H', 1, 3}, {'I', 2, 2}, {'J', 1, 3}, {'K', 1, 2}};
	waves = {36, 27, 19, 35, 0, 60, 0, 80, 35, 18, 49, 53, 0, 47, 0, 62, 0, 34, 26, 53, 35, 0, 31, 44, 64, 21, 31, 0, 59, 30, 53, 31, 42, 39};
	res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(21 == res);

	battlefield = {"11111111111",
				   "1A  B   C 0",
				   "111 111111 ",
				   " D1 1E   1 ",
				   "111 1 1111 ",
				   "1F  1 1    ",
				   "1 111 1G111",
				   "1 1 H 1 1I1",
				   "1J1 111 1 1",
				   "111 1K  1 1",
				   "    11111 1"};
	turrets = {{'A', 1, 3}, {'B', 1, 2}, {'C', 2, 2}, {'D', 1, 4}, {'E', 4, 2}, {'F', 2, 2}, {'G', 3, 2}, {'H', 1, 2}, {'I', 1, 2}, {'J', 2, 3}, {'K', 1, 3}};
	waves = {50, 40, 25, 54, 26, 0, 64, 21, 36, 35, 0, 24, 38, 0, 69, 32, 56, 24, 33, 63, 19, 56, 39, 43, 28, 11, 42, 32, 51, 43, 27, 0, 42, 0, 0, 65, 24, 28, 38, 29, 0, 45, 34, 27, 44};
	res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(30 == res);
}

void Test_DifferentSize()
{
	//small
	Battlefield battlefield = {"011  1111",
							   " A1  1BC1",
							   " 11  1 11",
							   " 1D  1 1E",
							   " 111 1F11",
							   "  G1 1  1",
							   " 111 1 11",
							   " 1H  1 1I",
							   " 11111 11"};
	Turrets turrets = {{'A', 1, 4}, {'B', 2, 2}, {'C', 1, 3}, {'D', 1, 3}, {'E', 1, 2}, {'F', 3, 3}, {'G', 1, 2}, {'H', 2, 3}, {'I', 2, 3}};
	IncomingWaves waves = {36, 33, 27, 35, 44, 27, 25, 38, 39, 0, 35, 0, 55, 22, 26, 38, 0, 34, 48, 30, 40, 19, 46, 0, 34, 43, 24, 36, 0, 38, 31};
	auto res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(34 == res);

	battlefield = {"011111111111",
				   "           1",
				   "   111A111 1",
				   "1111B111 1 1",
				   "1        1 1",
				   "1 11111111 1",
				   "1 1C     D 1",
				   "1 11111111 1",
				   "1       E1 1",
				   "1 11111111 1",
				   "1 1F       1",
				   "1 1111111111"};
	turrets = {{'A', 3, 4}, {'B', 1, 2}, {'C', 1, 4}, {'D', 1, 2}, {'E', 3, 4}, {'F', 2, 2}};
	waves = {31, 0, 32, 30, 18, 0, 21, 30, 26, 33, 24, 25, 31, 21, 28, 27, 0, 26, 30, 31, 26, 25, 29, 20, 32, 29, 20, 23, 23, 25, 20, 25, 18, 0, 32, 33, 0, 20, 0, 0, 19, 29, 20, 20, 27, 24};
	res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(0 == res);

	//medium
	battlefield = {"111111 11111 111",
				   "1A   1 1  B1 1C1",
				   "1111 1 1 111 1 1",
				   "  D1 1 1 1E  1 1",
				   "0111 1 1F11111 1",
				   "     111       1",
				   "1111        1111",
				   "1 G11111111 1   ",
				   "1        H1 1111",
				   "11111 111 1   I1",
				   "    1J1 1 111111",
				   "11111 1K1       ",
				   "1     1 11111111",
				   "1111111   L   M1",
				   "    N   11111111",
				   "111111111       "};
	turrets = {{'A', 2, 2}, {'B', 1, 2}, {'C', 1, 4}, {'D', 4, 2}, {'E', 1, 2}, {'F', 3, 2}, {'G', 2, 2}, {'H', 5, 2}, {'I', 2, 2}, {'J', 4, 2}, {'K', 3, 4}, {'L', 1, 3}, {'M', 2, 3}, {'N', 2, 2}};
	waves = {63, 63, 51, 48, 62, 47, 68, 52, 67, 60, 69, 0, 0, 40, 56, 40, 45, 61, 55, 42, 57, 48, 43, 65, 46, 51, 44, 53, 45, 64, 53, 53, 57, 57, 48, 51, 53, 65, 63, 60, 42, 66, 58, 45};
	res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(232 == res);

	battlefield = {"011111 11111 111",
				   "    A1 1   1 1B1",
				   "111111 1C111 1 1",
				   "1D     1 1   1 1",
				   "1 111 11 11111 1",
				   "1 1 1E1        1",
				   "111F111 11111111",
				   "        1G      ",
				   "1111111 11111111",
				   "1  H  1       I1",
				   "1 111 1 11111111",
				   "1 1 1 1J1   K   ",
				   "1 1 1 1 11111111",
				   "1L1 1 1        1",
				   "111 1 1111M111 1",
				   "    1    111 111"};
	turrets = {{'A', 3, 1}, {'B', 1, 2}, {'C', 2, 4}, {'D', 2, 1}, {'E', 1, 3}, {'F', 5, 3}, {'G', 4, 4}, {'H', 2, 2}, {'I', 1, 3}, {'J', 3, 1}, {'K', 2, 2}, {'L', 1, 2}, {'M', 3, 1}};
	waves = {43, 30, 40, 50, 52, 38, 50, 44, 0, 43, 42, 41, 30, 46, 47, 34, 51, 37, 53, 39, 47, 42, 46, 30, 50, 36, 34, 0, 30, 42, 50, 0, 50, 50, 54, 40, 55, 46, 39, 47, 35, 32, 35, 39, 32, 41, 34, 47, 32, 48, 35, 31, 55, 0, 30, 35, 32, 0, 34, 31, 46, 34, 0};
	res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(0 == res);

	//large
	battlefield = {"  11111111111111 111",
				   "0 1         A  1 1 1",
				   "1 1 1111111111 1B1 1",
				   "1C1 1D       1 111 1",
				   "1 1 11111111 1     1",
				   "1 1        1E1111111",
				   "1 11111111 1        ",
				   "1  F    G1 1 111H111",
				   "1111111111 111 111 1",
				   "                   1",
				   "1111111111 111 111 1",
				   "1I       1 1J1 1K1 1",
				   "11111111 1 1 1 1 1 1",
				   "      L1 1 1 111 111",
				   "   111 1 1 1    M   ",
				   "1111N1 1 1 111111111",
				   "1    1 1 1         1",
				   "1 1111 1 1 111 111 1",
				   "1 1O   1 1 1 1P1 1 1",
				   "1 111111 111 111 111"};
	turrets = {{'A', 1, 4}, {'B', 1, 3}, {'C', 2, 4}, {'D', 2, 2}, {'E', 2, 2}, {'F', 2, 2}, {'G', 6, 3}, {'H', 2, 3}, {'I', 2, 4}, {'J', 3, 3}, {'K', 1, 3}, {'L', 2, 2}, {'M', 3, 4}, {'N', 3, 3}, {'O', 2, 4}, {'P', 2, 4}};
	waves = {92, 77, 97, 86, 71, 73, 68, 90, 84, 61, 76, 70, 88, 54, 61, 61, 57, 61, 66, 68, 58, 58, 0, 75, 54, 69, 0, 87, 77, 91, 97, 0, 64, 97, 63, 79, 77, 95, 83, 82, 85, 58, 85, 82, 0, 85, 81, 88, 74, 83, 0, 97, 68, 56, 77, 87, 91, 87, 83, 70, 0, 74, 92, 69, 95, 94, 75, 79, 0, 68, 58, 70};
	res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(402 == res);

	battlefield = {"  111111111111111111",
				   "0 1               A1",
				   "1 1 1111111111111111",
				   "1B1 1C        D     ",
				   "1 1 1111111111111111",
				   "1 1               E1",
				   "1 11111111 111111111",
				   "1  F    G1 1H       ",
				   "1111111111 111111111",
				   "                   1",
				   "1111111111 111 111 1",
				   "1I       1 1J1 1K1 1",
				   "11111111 1 1 1 1 1 1",
				   "      L1 1 1 111 111",
				   "   111 1 1 1    M   ",
				   "1111N1 1 1 111111111",
				   "1    1 1 1         1",
				   "1 1111 1 1 111 111 1",
				   "1 1O   1 1 1 1P1 1 1",
				   "1 111111 111 111 111"};
	turrets = {{'A', 2, 4}, {'B', 2, 3}, {'C', 2, 3}, {'D', 5, 4}, {'E', 1, 4}, {'F', 2, 2}, {'G', 3, 2}, {'H', 5, 2}, {'I', 2, 2}, {'J', 5, 4}, {'K', 1, 5}, {'L', 6, 5}, {'M', 2, 5}, {'N', 3, 3}, {'O', 3, 4}, {'P', 1, 4}};
	waves = {71, 112, 97, 81, 101, 110, 108, 83, 88, 80, 0, 100, 88, 75, 103, 98, 105, 91, 0, 79, 105, 0, 93, 114, 0, 0, 94, 98, 78, 111, 71, 68, 97};
	res = TowerDefenseAnalysis(battlefield, turrets, waves);
	assert(0 == res);
}
void RunTests()
{
	Test_Examples();
	Test_DifferentSize();
}
